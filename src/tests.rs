#[cfg(test)]
mod tests {
    use crate::{guess, GuessReq};
    use rocket::serde::json::Json;

    #[test]
    fn test_guess()
    {
        let expected = vec![
            8.961152e-15,
            1.5442085e-8,
            1.6142537e-12,
            3.4178294e-5,
            0.00014970092,
            0.00011313953,
            9.563949e-23,
            4.130515e-5,
            0.0017709624,
            0.9978732,
        ];

        let req = GuessReq {
            network_id: "resources/models/20240906081430/network".to_string(),
            image: "170810;451;5500;561;5400;651;5310;731;5240;801;5170;861;5110;901;5070;951;5030;991;4980;1041;4940;1071;4900;1121;4860;1161;4820;1191;4800;1221;4760;1261;4730;1281;4700;1311;4680;1331;4650;1361;4630;1381;4610;1401;4590;1421;4570;1441;4550;1451;4540;1471;4510;1491;4500;1511;4480;1521;4470;1541;4450;1551;4440;1561;4430;1581;4410;1591;4400;1601;4390;1611;4380;1631;4360;1641;4350;1651;4340;1661;4330;1671;4320;1681;4310;1691;4300;1701;4300;1701;4290;1711;4280;1711;4280;1721;4280;1721;4270;1731;4260;1731;4260;1741;4260;1741;4250;1741;4260;1741;4250;1741;4260;1771;4220;1821;4180;1841;4150;1871;4130;951;170;771;4100;911;320;681;4090;871;400;651;4070;851;450;641;4060;821;500;631;4040;801;540;631;4030;791;560;631;4010;781;600;621;4000;771;630;611;3980;761;670;591;3980;751;720;561;3970;731;770;531;3960;731;770;551;3950;721;780;551;3940;721;780;571;3930;711;790;571;3930;701;800;571;3920;701;800;591;3910;691;810;591;3910;681;820;591;3900;681;820;601;3900;681;820;611;3890;671;830;611;3880;671;830;621;3880;661;840;621;3880;651;850;621;3870;661;850;621;3870;651;860;621;3870;651;860;621;3860;651;860;631;3860;651;860;631;3860;641;870;631;3860;641;860;641;3860;641;860;641;3850;641;870;641;3850;641;860;641;3860;631;870;641;3860;631;860;651;3860;631;860;651;3860;621;870;641;3870;621;860;651;3870;621;860;651;3870;611;860;651;3870;621;860;651;3870;621;850;661;3870;611;850;661;3880;611;850;661;3880;611;840;671;3880;611;840;671;3880;611;830;681;3880;611;820;681;3890;611;820;681;3890;611;810;691;3890;611;810;691;3890;611;800;701;3890;611;790;711;3890;611;790;701;3900;611;780;711;3900;611;780;711;3900;611;770;721;3900;611;760;731;3900;611;750;741;3900;611;750;731;3910;611;740;741;3910;621;720;751;3910;621;710;761;3920;611;700;771;3920;621;680;781;3920;621;670;781;3930;621;650;801;3930;631;630;811;3930;631;620;821;3930;641;600;831;3930;641;590;831;3940;651;560;851;3950;651;540;861;3950;651;530;871;3950;661;500;891;3950;671;470;901;3960;681;440;921;3970;691;410;931;3970;701;370;961;3970;721;330;981;3980;741;280;1001;3980;761;220;1031;3990;791;150;1071;4000;2001;4000;2001;4000;2001;4010;1991;4010;1981;4020;1981;4030;1971;4030;1971;4030;1971;4040;1961;4040;1951;4060;1941;4060;1941;4070;1931;4070;1931;4080;1921;4080;1921;4090;1911;4090;1911;4100;1901;4100;1901;4110;1881;4130;1871;4140;1861;4140;1861;4150;1851;4160;1841;4170;1831;4170;1831;4180;1821;4190;1811;4200;1801;4210;1781;4230;1771;4240;1761;4250;1751;4260;1741;4270;1731;4280;1721;4290;1711;4300;1701;4310;1691;4320;1681;4330;1661;4360;1641;4380;1621;4390;1611;4410;1591;4420;1581;4440;1561;4460;921;10;611;4480;871;40;611;4500;831;60;611;4530;781;80;611;4550;731;110;611;4580;681;130;611;4610;611;170;611;4640;541;210;611;4670;471;250;611;4710;381;290;611;4770;271;350;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5380;621;5380;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;621;5380;621;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;621;5380;621;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;611;5390;621;5380;621;5390;611;5390;611;5390;611;5390;611;5390;611;5390;621;5380;621;5380;621;5380;631;5370;631;5380;621;5380;621;5380;631;5370;631;5370;631;5370;631;5380;621;5380;621;5380;621;5380;621;5380;621;5390;611;5390;611;5390;601;5410;591;5410;591;5410;591;5420;571;5430;571;5430;571;5440;551;5450;551;5460;531;5470;531;5480;511;5490;511;5500;491;5520;471;5540;451;5560;431;5580;411;5600;391;5620;371;5640;351;5670;311;5710;271;5750;231;5810;151;782350;".to_string(),
        };

        let res = guess(Json(req));

        match res {
            Ok(json) => { assert_eq!(expected, json.0) }
            Err(e) => { assert!(false, "{e:?}") }
        }
    }
}
