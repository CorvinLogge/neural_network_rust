name: Docker

on:
  push:
    branches: [ "deploy" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: neural_network


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into Docker
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/neural_network:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into Docker
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Install sshpass
        run: sudo apt-get install sshpass

      - name: Copy docker-compose.yml
        run: sshpass -v -p ${{ secrets.NETCUP_PASSWORD }} scp -o StrictHostKeyChecking=no compose.yml root@${{ secrets.NETCUP_IP }}:/home/neural_network/docker

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NETCUP_IP }}
          username: root
          password: ${{ secrets.NETCUP_PASSWORD }}
          script: |
            cd /home/neural_network/docker
            export IMAGE_TAG=${{ github.sha }}
            docker compose down
            docker container prune -f
            docker image prune -af
            docker compose pull
            docker compose up -d